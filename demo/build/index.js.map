{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../esm/helpers.js","webpack:///../esm/new.js","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_helpers","parseTime","seconds","hours","Math","floor","mins","toFixed","toString","secs","parsedTime","getFileType","string","substr","lastIndexOf","getFileName","replace","split","_helpers2","rawOptions","arguments","length","undefined","defaultOptions","theme","components","playPause","progress","volume","download","mute","duration","timer","options","assign","state","audioNodes","_setComponentsByTheme","themename","rawComponents","defaultComponents","_findAudio","audioElements","document","getElementsByTagName","slice","_prepareClasses","index","classes","classesArray","classesString","trim","push","_generateMarkup","nodes","map","node","_newPlayer$classList","newPlayer","createElement","className","classList","add","apply","_toConsumableArray","setAttribute","setComponentsByTheme","findAudio","generateMarkup","prepareClasses","_new","console","log","picobel_instance","_new2","default"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * -----------------------------\n * HELPERS\n *\n * These are basic utilities to\n * parse data, add/remove/toggle\n * classes etc.\n * -----------------------------\n */\nconst _helpers = {\n    // Convert seconds into minutes-and-seconds (MMSS) format\n    parseTime: seconds => {\n        let hours = Math.floor(seconds / 3600);\n\n        let mins = Math.floor((seconds % 3600) / 60)\n            .toFixed(0)\n            .toString();\n\n        let secs = Math.floor((seconds % 3600) % 60)\n            .toFixed(0)\n            .toString();\n\n        // Left-pad seconds string if needed\n        secs = secs > 10 ? secs : `0${secs}`;\n\n        let parsedTime = `${mins}:${secs}`;\n\n        if (hours > 0) {\n            // Left-pad minutes string if needed\n            mins = mins > 10 ? mins : `0${mins}`;\n            parsedTime = `${hours}:${mins}:${secs}`;\n        }\n\n        return parsedTime;\n    },\n\n    // Get File Type\n    getFileType: string => string.substr((~-string.lastIndexOf('.') >>> 0) + 2),\n\n    // Get File Name\n    getFileName: string => {\n        let fullFileName = string.replace(/^.*[\\\\\\/]/, '');\n        let withNoExtension = fullFileName.split('.')[0];\n        return withNoExtension;\n    }\n};\n\nexport default _helpers;\n","import _helpers from './helpers';\n\n/**\n * -----------------------------------------------------------------------------\n *  ____  _           _          _    _\n * |  _ \\(_) ___ ___ | |__   ___| |  (_)___\n * | |_) | |/ __/ _ \\| '_ \\ / _ \\ |  | / __|\n * |  __/| | (_| (_) | |_) |  __/ |_ | \\__ \\\n * |_|   |_|\\___\\___/|_.__/ \\___|_(_)| |___/\n * Picobel.js                       _/ |\n * tomhazledine.com/audio          |__/\n *\n * =============================================================================\n *\n * Replace any native <audio> instances with standard elements (spans, buttons &\n * divs) that we can style however we like.\n *\n * Functionality powered by Web Audio API.\n * -----------------------------------------------------------------------------\n */\n\nfunction Picobel(rawOptions = {}) {\n    /**\n     * -------------------------------------------------------------------------\n     * SETUP\n     *\n     * Parse our options, and set starting state.\n     * -------------------------------------------------------------------------\n     */\n\n    // Define our default options.\n    const defaultOptions = {\n        theme: 'default',\n        components: {\n            theme: 'default',\n            playPause: true,\n            progress: true,\n            volume: true,\n            download: false,\n            mute: true,\n            duration: true,\n            timer: true\n        }\n    };\n    // Set `options` from arguments, usind `defaultOptions` as fallback.\n    const options = Object.assign(defaultOptions, rawOptions);\n\n    // Declare a `state` variable that will hold the active state.\n    let state = {\n        theme: options.theme,\n        components: options.components,\n        audioNodes: []\n    };\n\n    /**\n     * -------------------------------------------------------------------------\n     * MAIN METHODS\n     *\n     * The functions we will use to generate Picobel's core functionality.\n     * -------------------------------------------------------------------------\n     */\n\n    // Return a `components` object that matches the provided themename.\n    const _setComponentsByTheme = (themename = 'default', rawComponents = {}) => {\n        const defaultComponents = {\n            theme: themename,\n            playPause: true,\n            progress: true,\n            volume: true,\n            download: false,\n            mute: true,\n            duration: true,\n            timer: true\n        };\n        const activeComponents = Object.assign(defaultComponents, rawComponents);\n        return activeComponents;\n    };\n\n    // Return an array of all the <audio> elements found on the page.\n    const _findAudio = () => {\n        // Get all the <audio> occurrences in the page.\n        let audioElements = document.getElementsByTagName('audio');\n        // Save our audioElements as an array (so we can manipulate the DOM but\n        // still access our items).\n        let items = [].slice.call(audioElements);\n        return items;\n    };\n\n    const _prepareClasses = (index, classes, theme) => {\n        const classesString = `customAudioPlayer loading player_${index} ${classes}`;\n        const classesArray = classesString.trim().split(' ');\n        classesArray.push(theme);\n        return classesArray;\n    };\n\n    const _generateMarkup = (nodes = [], components = defaultOptions.components) => {\n        const markupArray = nodes.map((node, key) => {\n            // Create a container for our new player\n            const newPlayer = document.createElement('div');\n\n            // Set the relevant classes on the new player element\n            const classes = _prepareClasses(key, node.className, components.theme);\n            newPlayer.classList.add(...classes);\n\n            // Set song index attribute\n            newPlayer.setAttribute('data-song-index', key);\n\n            // // Create a loading indicator\n            // let loading = document.createElement('div');\n            // loading.className = 'loader';\n            // newPlayer.appendChild(loading);\n\n            // // Add \"waiting\" indicator here.\n\n            // // Create a play/pause button\n            // let button = document.createElement('button');\n            // button.className = 'playerTrigger';\n            // let buttonText = document.createElement('span');\n            // buttonText.className = 'buttonText';\n            // buttonText.innerHTML = 'play';\n            // button.appendChild(buttonText);\n\n            // // Create a wrapper for our player's metadata\n            // let meta = document.createElement('div');\n            // meta.className = 'metaWrapper';\n\n            // // Create elements to display file metadata\n            // let meta_title = document.createElement('span');\n            // meta_title.className = 'titleDisplay';\n            // meta_title.innerHTML = 'File ' + (i + 1);\n            // meta.appendChild(meta_title);\n\n            // let meta_artist = document.createElement('span');\n            // meta_artist.className = 'artistDisplay';\n            // meta.appendChild(meta_artist);\n\n            // let timings = document.createElement('div');\n            // timings.className = 'timingsWrapper';\n\n            // let meta_timer = document.createElement('span');\n            // meta_timer.className = 'songPlayTimer';\n            // meta_timer.innerHTML = '0:00';\n            // timings.appendChild(meta_timer);\n\n            // // Progress Indicator\n            // let meta_progress_wrapper = document.createElement('div');\n            // meta_progress_wrapper.className = 'songProgressSliderWrapper';\n            // let meta_pseudo_progress_background = document.createElement('div');\n            // meta_pseudo_progress_background.className = 'pseudoProgressBackground';\n            // meta_progress_wrapper.appendChild(meta_pseudo_progress_background);\n            // let meta_pseudo_progress_indicator = document.createElement('div');\n            // meta_pseudo_progress_indicator.className = 'pseudoProgressIndicator';\n            // meta_progress_wrapper.appendChild(meta_pseudo_progress_indicator);\n            // let meta_pseudo_progress_playhead = document.createElement('div');\n            // meta_pseudo_progress_playhead.className = 'pseudoProgressPlayhead';\n            // meta_progress_wrapper.appendChild(meta_pseudo_progress_playhead);\n            // let meta_progress = document.createElement('input');\n            // meta_progress.type = 'range';\n            // meta_progress.min = 0;\n            // meta_progress.max = 100;\n            // meta_progress.value = 0;\n            // meta_progress.className = 'songProgressSlider';\n            // meta_progress_wrapper.appendChild(meta_progress);\n\n            // timings.appendChild(meta_progress_wrapper);\n\n            // let meta_duration = document.createElement('span');\n            // meta_duration.className = 'songDuration';\n            // meta_duration.innerHTML = '-:--';\n            // timings.appendChild(meta_duration);\n\n            // // Volume Indicator\n            // let meta_volume = document.createElement('div');\n            // meta_volume.className = 'songVolume';\n            // let meta_mute = document.createElement('button');\n            // meta_mute.className = 'songMuteButton';\n            // meta_mute.innerHTML = 'Mute';\n            // meta_volume.appendChild(meta_mute);\n            // let meta_volume_label_wrapper = document.createElement('div');\n            // meta_volume_label_wrapper.className = 'songVolumeLabelWrapper';\n            // let meta_volume_label = document.createElement('span');\n            // meta_volume_label.className = 'songVolumeLabel';\n            // meta_volume_label.innerHTML = 'Volume';\n            // meta_volume_label_wrapper.appendChild(meta_volume_label);\n            // let meta_volume_value = document.createElement('span');\n            // meta_volume_value.className = 'songVolumeValue';\n            // meta_volume_value.innerHTML = '10';\n            // meta_volume_label_wrapper.appendChild(meta_volume_value);\n            // meta_volume.appendChild(meta_volume_label_wrapper);\n            // let meta_volume_wrapper = document.createElement('div');\n            // meta_volume_wrapper.className = 'songVolumeSliderWrapper';\n            // let meta_pseudo_volume_background = document.createElement('div');\n            // meta_pseudo_volume_background.className = 'pseudoVolumeBackground';\n            // meta_volume_wrapper.appendChild(meta_pseudo_volume_background);\n            // let meta_pseudo_volume_indicator = document.createElement('div');\n            // meta_pseudo_volume_indicator.className = 'pseudoVolumeIndicator';\n            // meta_volume_wrapper.appendChild(meta_pseudo_volume_indicator);\n            // let meta_pseudo_volume_playhead = document.createElement('div');\n            // meta_pseudo_volume_playhead.className = 'pseudoVolumePlayhead';\n            // meta_volume_wrapper.appendChild(meta_pseudo_volume_playhead);\n            // let meta_volume_control = document.createElement('input');\n            // meta_volume_control.type = 'range';\n            // meta_volume_control.min = 0;\n            // meta_volume_control.max = 1;\n            // meta_volume_control.value = 1;\n            // meta_volume_control.step = 0.1;\n            // meta_volume_control.className = 'songVolumeSlider';\n            // meta_volume_wrapper.appendChild(meta_volume_control);\n            // meta_volume.appendChild(meta_volume_wrapper);\n\n            // // Add the button to the player\n            // newPlayer.appendChild(button);\n\n            // // Add the metadata to the player\n            // newPlayer.appendChild(meta);\n\n            // // Add the timings to the player\n            // newPlayer.appendChild(timings);\n\n            // // Add the volume display to the player\n            // newPlayer.appendChild(meta_volume);\n\n            // // Replace the original audio element with our new creation.\n            // _data[i].parentNode.replaceChild(newPlayer, _data[i]);\n\n            return newPlayer;\n        });\n\n        return markupArray;\n    };\n\n    /**\n     * -------------------------------------------------------------------------\n     * RUN THE CODE\n     *\n     * This is where the methods are called. Reading these lines should give you\n     * a step-by-step overview of what Picobel does.\n     * -------------------------------------------------------------------------\n     */\n\n    // Set `components` based on theme (but overridden by explicit `options`).\n    state.components = _setComponentsByTheme(state.theme, rawOptions.components);\n\n    // Get audio elements from page, and save their details to state.\n    state.audioNodes = _findAudio();\n\n    // Build markup for each element, based on `components`\n    const markup = _generateMarkup(state.audioNodes, state.components);\n\n    // Replace audio elements in DOM with new markup\n\n    // Setup event listeners\n\n    // Provide methods for external use?\n\n    // --- //\n\n    /**\n     * -------------------------------------------------------------------------\n     * API\n     *\n     * Make these methods public - useful for testing.\n     * -------------------------------------------------------------------------\n     */\n\n    return {\n        state,\n        setComponentsByTheme: _setComponentsByTheme,\n        findAudio: _findAudio,\n        generateMarkup: _generateMarkup,\n        prepareClasses: _prepareClasses\n    };\n}\n\nexport default Picobel;\n","import Picobel from '../esm/new';\n// import 'picobel/css/player.default.css';\n\nconsole.log('file loaded');\nlet picobel_instance = Picobel({ theme: 'bbc' });\n\nlet nodes = picobel_instance.findAudio(document);\nconsole.log(nodes);\nconsole.log(picobel_instance.state);\n"],"sourceRoot":""}