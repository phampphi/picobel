{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../esm/picobel.js","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","options","theme","audioElements","document","getElementsByTagName","slice","findAudio","data","output","length","item","url","src","preload","push","getRawData","newPlayer","createElement","className","_addClass","setAttribute","loading","appendChild","button","buttonText","innerHTML","meta","meta_title","meta_artist","timings","meta_timer","meta_progress_wrapper","meta_pseudo_progress_background","meta_pseudo_progress_indicator","meta_pseudo_progress_playhead","meta_progress","type","min","max","meta_duration","meta_volume","meta_mute","meta_volume_label_wrapper","meta_volume_label","meta_volume_value","meta_volume_wrapper","meta_pseudo_volume_background","meta_pseudo_volume_indicator","meta_pseudo_volume_playhead","meta_volume_control","step","parentNode","replaceChild","buildMarkup","wrappers","getElementsByClassName","playPauseButtons","muteButtons","playPauseButtonsText","playTimer","songLengthBox","titleDisplay","artistDisplay","progressBar","playhead","indicator","volumeControl","volumeDisplay","volumeIndicator","volumePlayhead","myAudio","Audio","isNaN","duration","currentTime","addEventListener","_playPauseAudio","sliderScrub","volume","_triggerUpdateProgress","_loadStart","_canplaythrough","_muteUnmuteAudio","_errors","_stalled","_progress","initAudio","index","this","getAttribute","_secondsToMMSS","_setLengthDisplay","_removeClass","string","fileType","substr","lastIndexOf","fileName","replace","split","_getFileName","title","artist","_getMeta","pauseAll","pause","playSong","play","targetTime","toFixed","_updateProgress","mute","setVolume","valueMapped","volumePercent","style","width","left","state","oldVolume","playPause","target","targetSong","_hasClass","console","log","progress","progressParsed","progressPercent","e","readyState","seconds","mins","Math","floor","toString","secs","el","classList","contains","RegExp","test","add","remove","join","_picobel","_picobel2","default"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\n * -----------------------------------------\n *  ____  _           _          _    _\n * |  _ \\(_) ___ ___ | |__   ___| |  (_)___\n * | |_) | |/ __/ _ \\| '_ \\ / _ \\ |  | / __|\n * |  __/| | (_| (_) | |_) |  __/ |_ | \\__ \\\n * |_|   |_|\\___\\___/|_.__/ \\___|_(_)| |___/\n * Picobel.js                       _/ |\n * tomhazledine.com/audio          |__/\n *\n * =========================================\n *\n * Replace any native <audio> instances with\n * standard elements (spans, buttons & divs)\n * that we can style however we like.\n *\n * Functionality powered by Web Audio API.\n * -----------------------------------------\n */\nfunction Picobel(options) {\n    /**\n     * -----------------------\n     * PARSE OPTIONS\n     *\n     * Make sure we have valid\n     * options. If we don't we\n     * should provide sensible\n     * fallbacks.\n     * -----------------------\n     */\n    options = typeof options !== 'undefined' ? options : {};\n    // options.prefix = options.prefix || '';\n    options.theme = options.theme || 'defaultPlayerTheme';\n\n    /**\n     * ---------------------------------------------\n     * MAKE STUFF HAPPEN\n     *\n     * The following lines initialize functions we\n     * declare further down the file. We need to\n     * call them in a specific order (so things like\n     * element-selection work properly).\n     * ---------------------------------------------\n     */\n\n    // Find all the elements and store them\n    // in an array (for easy access).\n    var audioElements = findAudio();\n\n    // Get our data from those elements.\n    var data = getRawData(audioElements);\n\n    // Replace those elements with our own custom markup.\n    buildMarkup(audioElements);\n\n    // Now we've placed our elements in the DOM, we can select them.\n    var wrappers = document.getElementsByClassName('customAudioPlayer');\n    var playPauseButtons = document.getElementsByClassName('playerTrigger');\n    var muteButtons = document.getElementsByClassName('songMuteButton');\n    var playPauseButtonsText = document.getElementsByClassName('buttonText');\n    var playTimer = document.getElementsByClassName('songPlayTimer');\n    var songLengthBox = document.getElementsByClassName('songDuration');\n    var titleDisplay = document.getElementsByClassName('titleDisplay');\n    var artistDisplay = document.getElementsByClassName('artistDisplay');\n    var progressBar = document.getElementsByClassName('songProgressSlider');\n    var playhead = document.getElementsByClassName('pseudoProgressPlayhead');\n    var indicator = document.getElementsByClassName('pseudoProgressIndicator');\n    var volumeControl = document.getElementsByClassName('songVolumeSlider');\n    var volumeDisplay = document.getElementsByClassName('songVolumeValue');\n    var volumeIndicator = document.getElementsByClassName('pseudoVolumeIndicator');\n    var volumePlayhead = document.getElementsByClassName('pseudoVolumePlayhead');\n\n    // Initialize the audio.\n    var myAudio = initAudio(data);\n\n    // Create a var to store the index of the file currently\n    // being played (defaulting to the first track in the DOM)\n    var currentSongIndex = 0;\n\n    /**\n     * ---------------------------------\n     * SETUP\n     *\n     * These functions find our targets,\n     * generate our elements, and set up\n     * our environment.\n     * ---------------------------------\n     */\n\n    // Return an array of all the <audio> elements found on the page.\n    function findAudio() {\n        // Get all the <audio> occurrences in the page.\n        var audioElements = document.getElementsByTagName('audio');\n        // Save our audioElements as an array (so\n        // we can manipulate the DOM but still\n        // access our items).\n        var items = [].slice.call(audioElements);\n        return items;\n    }\n\n    // Get the url for each audio file\n    // we want to load [using elements\n    // found by findAudio()]\n    function getRawData(data) {\n        var output = [];\n        for (var i = 0; i < data.length; i++) {\n            var item = {};\n            // Get the file's URL\n            item.url = data[i].src;\n            // Check for a audio tag's `preload` attribute\n            item.preload = options.preload ? options.preload : data[i].preload;\n            output.push(item);\n        }\n        return output;\n    }\n\n    // Create our own markup in place of the native <audio> elements.\n    function buildMarkup(data) {\n        for (var i = 0; i < data.length; i++) {\n            // Create a container for our new player\n            var newPlayer = document.createElement('div');\n            newPlayer.className = 'customAudioPlayer loading player_' + i;\n            // If the element has a valid class, add that to the player's wrapper\n            var className = audioElements[i].className;\n            if (className !== '') {\n                _addClass(newPlayer, className);\n            }\n            // Add the class set in our options.\n            _addClass(newPlayer, options.theme);\n            newPlayer.setAttribute('data-song-index', i);\n\n            // Create a loading indicator\n            var loading = document.createElement('div');\n            loading.className = 'loader';\n            newPlayer.appendChild(loading);\n\n            // Add \"waiting\" indicator here.\n\n            // Create a play/pause button\n            var button = document.createElement('button');\n            button.className = 'playerTrigger';\n            var buttonText = document.createElement('span');\n            buttonText.className = 'buttonText';\n            buttonText.innerHTML = 'play';\n            button.appendChild(buttonText);\n\n            // Create a wrapper for our player's metadata\n            var meta = document.createElement('div');\n            meta.className = 'metaWrapper';\n\n            // Create elements to display file metadata\n            var meta_title = document.createElement('span');\n            meta_title.className = 'titleDisplay';\n            meta_title.innerHTML = 'File ' + (i + 1);\n            meta.appendChild(meta_title);\n\n            var meta_artist = document.createElement('span');\n            meta_artist.className = 'artistDisplay';\n            meta.appendChild(meta_artist);\n\n            var timings = document.createElement('div');\n            timings.className = 'timingsWrapper';\n\n            var meta_timer = document.createElement('span');\n            meta_timer.className = 'songPlayTimer';\n            meta_timer.innerHTML = '0:00';\n            timings.appendChild(meta_timer);\n\n            // Progress Indicator\n            var meta_progress_wrapper = document.createElement('div');\n            meta_progress_wrapper.className = 'songProgressSliderWrapper';\n            var meta_pseudo_progress_background = document.createElement('div');\n            meta_pseudo_progress_background.className = 'pseudoProgressBackground';\n            meta_progress_wrapper.appendChild(meta_pseudo_progress_background);\n            var meta_pseudo_progress_indicator = document.createElement('div');\n            meta_pseudo_progress_indicator.className = 'pseudoProgressIndicator';\n            meta_progress_wrapper.appendChild(meta_pseudo_progress_indicator);\n            var meta_pseudo_progress_playhead = document.createElement('div');\n            meta_pseudo_progress_playhead.className = 'pseudoProgressPlayhead';\n            meta_progress_wrapper.appendChild(meta_pseudo_progress_playhead);\n            var meta_progress = document.createElement('input');\n            meta_progress.type = 'range';\n            meta_progress.min = 0;\n            meta_progress.max = 100;\n            meta_progress.value = 0;\n            meta_progress.className = 'songProgressSlider';\n            meta_progress_wrapper.appendChild(meta_progress);\n\n            timings.appendChild(meta_progress_wrapper);\n\n            var meta_duration = document.createElement('span');\n            meta_duration.className = 'songDuration';\n            meta_duration.innerHTML = '-:--';\n            timings.appendChild(meta_duration);\n\n            // Volume Indicator\n            var meta_volume = document.createElement('div');\n            meta_volume.className = 'songVolume';\n            var meta_mute = document.createElement('button');\n            meta_mute.className = 'songMuteButton';\n            meta_mute.innerHTML = 'Mute';\n            meta_volume.appendChild(meta_mute);\n            var meta_volume_label_wrapper = document.createElement('div');\n            meta_volume_label_wrapper.className = 'songVolumeLabelWrapper';\n            var meta_volume_label = document.createElement('span');\n            meta_volume_label.className = 'songVolumeLabel';\n            meta_volume_label.innerHTML = 'Volume';\n            meta_volume_label_wrapper.appendChild(meta_volume_label);\n            var meta_volume_value = document.createElement('span');\n            meta_volume_value.className = 'songVolumeValue';\n            meta_volume_value.innerHTML = '10';\n            meta_volume_label_wrapper.appendChild(meta_volume_value);\n            meta_volume.appendChild(meta_volume_label_wrapper);\n            var meta_volume_wrapper = document.createElement('div');\n            meta_volume_wrapper.className = 'songVolumeSliderWrapper';\n            var meta_pseudo_volume_background = document.createElement('div');\n            meta_pseudo_volume_background.className = 'pseudoVolumeBackground';\n            meta_volume_wrapper.appendChild(meta_pseudo_volume_background);\n            var meta_pseudo_volume_indicator = document.createElement('div');\n            meta_pseudo_volume_indicator.className = 'pseudoVolumeIndicator';\n            meta_volume_wrapper.appendChild(meta_pseudo_volume_indicator);\n            var meta_pseudo_volume_playhead = document.createElement('div');\n            meta_pseudo_volume_playhead.className = 'pseudoVolumePlayhead';\n            meta_volume_wrapper.appendChild(meta_pseudo_volume_playhead);\n            var meta_volume_control = document.createElement('input');\n            meta_volume_control.type = 'range';\n            meta_volume_control.min = 0;\n            meta_volume_control.max = 1;\n            meta_volume_control.value = 1;\n            meta_volume_control.step = 0.1;\n            meta_volume_control.className = 'songVolumeSlider';\n            meta_volume_wrapper.appendChild(meta_volume_control);\n            meta_volume.appendChild(meta_volume_wrapper);\n\n            // Add the button to the player\n            newPlayer.appendChild(button);\n\n            // Add the metadata to the player\n            newPlayer.appendChild(meta);\n\n            // Add the timings to the player\n            newPlayer.appendChild(timings);\n\n            // Add the volume display to the player\n            newPlayer.appendChild(meta_volume);\n\n            // Replace the original audio element with our new creation.\n            data[i].parentNode.replaceChild(newPlayer, data[i]);\n        }\n    }\n\n    // Initialize the audio for each file, and setup the event listeners.\n    function initAudio(data) {\n        var myAudio = [];\n\n        for (var i = 0; i < data.length; i++) {\n            // Init. the audio\n            myAudio[i] = new Audio();\n\n            // Apply the preload attr. if needed\n            if (data[i].preload) {\n                myAudio[i].preload = data[i].preload;\n            }\n\n            // Add the audio source (by URL) to the audio node\n            myAudio[i].src = data[i].url;\n\n            // Check if file exists before setting time, to prevent IE11 error\n            if (!isNaN(myAudio[i].duration)) {\n                myAudio[i].currentTime = 0;\n            }\n\n            // Setup event listeners\n            playPauseButtons[i].addEventListener('click', _playPauseAudio, false);\n            progressBar[i].addEventListener('input', sliderScrub, false);\n            volumeControl[i].addEventListener('input', volume, false);\n            myAudio[i].addEventListener('timeupdate', _triggerUpdateProgress, false);\n            myAudio[i].addEventListener('loadstart', _loadStart, false);\n            myAudio[i].addEventListener('canplaythrough', _canplaythrough, false);\n            muteButtons[i].addEventListener('click', _muteUnmuteAudio, false);\n\n            myAudio[i].addEventListener('error', _errors, false);\n            myAudio[i].addEventListener('stalled', _stalled, false);\n            myAudio[i].addEventListener('waiting', _errors, false);\n\n            myAudio[i].addEventListener('progress', _progress, false);\n\n            // Assign an index to each audio node:\n            // this links the audio elements to the\n            // relevant markup\n            myAudio[i].setAttribute('data-song-index', i);\n        }\n\n        return myAudio;\n    }\n\n    /**\n     * -----------------------------\n     * LOADING STATES\n     *\n     * Handle the buffering of audio\n     * data and update displays to\n     * show this.\n     * -----------------------------\n     */\n\n    // Fire this event when loading starts [TEST]\n    function _loadStart() {\n        // console.log( 'Load start' );\n    }\n\n    // Fire this event when we can play the audio\n    // all the way through (ie. it is fully loaded)\n    function _canplaythrough() {\n        var index = this.getAttribute('data-song-index');\n        _setLengthDisplay(index);\n        _removeClass(wrappers[index], 'loading');\n\n        _getMeta(index);\n    }\n\n    // Get info about the audio track, and update the display with this info\n    function _getMeta(i) {\n        // Get the filename and type\n        var url = myAudio[i].src;\n        var fileType = _getFileType(url);\n        var fileName = _getFileName(url);\n\n        // If there is a valid title, display that title...\n        var title = audioElements[i].title;\n        if (title !== '') {\n            titleDisplay[i].innerHTML = title;\n        } else {\n            // ...otherwise show the file name.\n            titleDisplay[i].innerHTML = fileName + '.' + fileType;\n        }\n\n        // If there is a valid 'artist', display the artist name.\n        var artist = audioElements[i].getAttribute('data-artist');\n        if (artist !== '') {\n            artistDisplay[i].innerHTML = artist;\n        }\n\n        // // If the element has a valid class, add that to the player's wrapper\n        // var className = audioElements[i].className;\n        // if (className != '') {\n        //     _addClass(wrappers[i], className)\n        // }\n    }\n\n    /**\n     * -----------------------\n     * PLAYBACK SETTING\n     *\n     * These functions control\n     * the functionality of\n     * the audio players.\n     * -----------------------\n     */\n\n    // Set all audio elements to 'paused'\n    function pauseAll() {\n        for (var i = 0; i < data.length; i++) {\n            myAudio[i].pause();\n        }\n    }\n\n    // Play the selected song\n    function playSong(index) {\n        currentSongIndex = index;\n        for (var i = 0; i < data.length; i++) {\n            if (i != index) {\n                myAudio[i].pause();\n            }\n        }\n        myAudio[index].play();\n    }\n\n    // Set the current position of selected song to specific value.\n    function sliderScrub() {\n        var value = this.value;\n        var index = this.parentNode.parentNode.parentNode.getAttribute('data-song-index');\n        var duration = myAudio[index].duration;\n        var targetTime = duration * (value / 100);\n        targetTime = targetTime.toFixed(2);\n        myAudio[index].currentTime = targetTime;\n        _updateProgress(index);\n    }\n\n    // Volume\n    function volume() {\n        var value = this.value;\n        var index = this.parentNode.parentNode.parentNode.getAttribute('data-song-index');\n        mute(index, false);\n        setVolume(index, value);\n    }\n\n    function setVolume(index, value) {\n        var valueMapped = value * 10;\n        var volumePercent = value * 100;\n        myAudio[index].volume = value;\n        volumeDisplay[index].innerHTML = valueMapped;\n        volumeControl[index].value = value;\n        volumeIndicator[index].style.width = volumePercent + '%';\n        volumePlayhead[index].style.left = volumePercent + '%';\n    }\n\n    // Mute\n    function mute(index, state) {\n        var oldVolume;\n        if (state) {\n            oldVolume = myAudio[index].volume;\n            muteButtons[index].setAttribute('data-saved-volume', oldVolume);\n            setVolume(index, 0);\n            _addClass(muteButtons[index], 'songMuted');\n            _removeClass(muteButtons[index], 'songUnmuted');\n            muteButtons[index].innerHTML = 'unmute';\n        } else {\n            // myAudio[index].volume = 0;\n            oldVolume = muteButtons[index].getAttribute('data-saved-volume');\n            if (typeof oldVolume != 'undefined' && oldVolume > 0) {\n                setVolume(index, oldVolume);\n            } else {\n                setVolume(index, 1);\n            }\n            _removeClass(muteButtons[index], 'songMuted');\n            _addClass(muteButtons[index], 'songUnmuted');\n            muteButtons[index].innerHTML = 'mute';\n        }\n    }\n\n    // Play or pause a track\n    function playPause(index, state) {\n        var buttonText = playPauseButtonsText[index];\n        var target = playPauseButtons[index];\n        if (state) {\n            for (var i = 0; i < playPauseButtons.length; i++) {\n                _removeClass(playPauseButtons[i], 'songPlaying');\n                _addClass(playPauseButtons[i], 'songPaused');\n                playPauseButtonsText[i].innerHTML = 'play';\n            }\n            playSong(index);\n            _addClass(target, 'songPlaying');\n            _removeClass(target, 'songPaused');\n            buttonText.innerHTML = 'pause';\n        } else {\n            pauseAll();\n            _removeClass(target, 'songPlaying');\n            _addClass(target, 'songPaused');\n            buttonText.innerHTML = 'play';\n        }\n    }\n\n    // Toggle 'play' and 'pause' for a track\n    function _playPauseAudio() {\n        var targetSong = this.parentNode.getAttribute('data-song-index');\n        if (typeof targetSong != 'undefined') {\n            var playSong = _hasClass(this, 'songPlaying') ? false : true;\n            playPause(targetSong, playSong);\n        } else {\n            console.log('too soon to play!');\n        }\n    }\n\n    // Toggle 'mute' for a track\n    function _muteUnmuteAudio() {\n        var targetSong = this.parentNode.parentNode.getAttribute('data-song-index');\n        var buttonText = playPauseButtonsText[targetSong];\n        if (_hasClass(this, 'songMuted')) {\n            mute(targetSong, false);\n            // _removeClass(this,'songMuted');\n            // _addClass(this,'songUnmuted');\n            // buttonText.innerHTML = 'mute';\n        } else {\n            mute(targetSong, true);\n            // _addClass(this,'songMuted');\n            // _removeClass(this,'songUnmuted');\n            // buttonText.innerHTML = 'unmute';\n        }\n    }\n\n    // Get index of track to be updated, then pass it to _updateProgress()\n    function _triggerUpdateProgress() {\n        var index = this.getAttribute('data-song-index');\n        _updateProgress(index);\n    }\n\n    // Set the value of the current-position display for a playing song\n    function _updateProgress(index) {\n        var progress = myAudio[index].currentTime;\n        var duration = myAudio[index].duration;\n        var progressParsed = _secondsToMMSS(progress);\n        playTimer[index].innerHTML = progressParsed;\n        if (progress >= duration) {\n            _removeClass(playPauseButtons[index], 'songPlaying');\n        }\n        var progressPercent = (progress / duration * 100).toFixed(2);\n        progressBar[index].value = progressPercent;\n        indicator[index].style.width = progressPercent + '%';\n        playhead[index].style.left = progressPercent + '%';\n    }\n\n    // Set the value of the song-length display\n    function _setLengthDisplay(index) {\n        var songLength = myAudio[index].duration;\n        var duration = _secondsToMMSS(songLength);\n        var songClass = '.song' + index;\n        songLengthBox[index].innerHTML = duration;\n    }\n\n    /**\n     * --------------\n     * ERROR HANDLING\n     *\n     * Functions that\n     * will display a\n     * warning notice\n     * when any error\n     * is triggered.\n     * --------------\n     */\n\n    function _errors(e) {\n        // console.log( 'error: ' );\n        // console.log( e.type );\n        var index = this.getAttribute('data-song-index');\n        // console.log( myAudio[index].error );\n        // console.log(e);\n    }\n\n    function _error(e) {\n        var index = this.getAttribute('data-song-index');\n        var error = myAudio[index].error;\n        // console.log( 'error: ' );\n        // console.log(e);\n        // console.log( error );\n    }\n    function _stalled(e) {\n        // console.log( 'stalled!' );\n        var index = this.getAttribute('data-song-index');\n        // console.log( 'Target: ' + index );\n        // console.log( 'Play?: ' + false );\n        playPause(index, false);\n    }\n    function _waiting() {\n        // console.log( 'waiting!' );\n    }\n\n    function _progress(e) {\n        var index = this.getAttribute('data-song-index');\n        var readyState = myAudio[index].readyState;\n    }\n\n    /**\n     * -----------------------------\n     * HELPERS\n     *\n     * These are basic utilities to\n     * parse data, add/remove/toggle\n     * classes etc.\n     * -----------------------------\n     */\n\n    // Convert seconds into minutes-and-seconds (MMSS) format\n    function _secondsToMMSS(seconds) {\n        var mins = Math.floor((seconds % 3600) / 60);\n        mins = mins.toFixed(0);\n        mins = mins.toString();\n        var secs = Math.floor((seconds % 3600) % 60);\n        secs = secs.toFixed(0);\n        secs = secs.toString();\n        if (secs < 10) {\n            secs = '0' + secs;\n        }\n        var mmss = mins + ':' + secs;\n        return mmss;\n    }\n\n    // Does the target element have the target class?\n    function _hasClass(el, className) {\n        var result;\n        if (el.classList) {\n            result = el.classList.contains(className);\n        } else {\n            result = new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);\n        }\n        return result;\n    }\n\n    // Add a class to the target element.\n    function _addClass(el, className) {\n        if (el.classList) {\n            el.classList.add(className);\n        } else {\n            el.className += ' ' + className;\n        }\n    }\n\n    // Remove a class from the target element.\n    function _removeClass(el, className) {\n        if (el.classList) {\n            el.classList.remove(className);\n        } else {\n            el.className = el.className.replace(\n                new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'),\n                ' '\n            );\n        }\n    }\n\n    // Get File Type\n    function _getFileType(string) {\n        return string.substr((~-string.lastIndexOf('.') >>> 0) + 2);\n    }\n\n    // Get File Name\n    function _getFileName(string) {\n        var fullFileName = string.replace(/^.*[\\\\\\/]/, '');\n        var withNoExtension = fullFileName.split('.')[0];\n        return withNoExtension;\n    }\n\n    /**\n     * ----------------------\n     * PUBLIC METHODS\n     *\n     * Declare the methods we\n     * want to be accessible\n     * from outside scope.\n     * ----------------------\n     */\n\n    return {\n        sliderScrub: sliderScrub,\n        playSong: playSong,\n        pauseAll: pauseAll\n    };\n}\n\nexport default Picobel;\n","import Picobel from '../esm/picobel';\n// import 'picobel/css/player.default.css';\n\nconsole.log('file loaded');\nPicobel();\n"],"sourceRoot":""}